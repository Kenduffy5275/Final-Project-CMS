# include <stdio.h> 
# include <stdlib.h> 
# include <string.h> 

int mainMenu(void){
	puts("\n\n\t***********************\n\t\tMenu\n\t***********************\n\n");
	printf("\t[1] View the recorded passwords\n");
	printf("\t[2] Search a password\n");
	printf("\t[3] Add a password\n");
	printf("\t[4] Edit a password\n");
	printf("\t[5] Delet a password\n");
	printf("\t[6] Exit\n");
	printf("\n\tPlease select one of the above options to proceed: ");
	int input;
	scanf("%d",&input);
	if(input>=1 && input <=6){
		return input;
	}else{
		system("@cls||clear");
		printf("\t<<<Your input is not available on the menue, please tryagain>>>\n");
		mainMenu();
	}
}




void view(void){
	system("@cls||clear");
	puts("\n\n\t***********************\n\t\tView The Recorded Passwords\n\t***********************\n\n");
	
	FILE *myfile;
	myfile = fopen("repository.txt","r"); 
	if(myfile == NULL)
	{  
		printf("An error is happend!!!");  
		printf("Please reset everything and try again!!!");  
		exit(1);             
	}
	
	struct entity{
		char url[20];
		char username[20];
		char password[20];
	};
	struct entity new;
	
	printf("\t\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2 The reocrded Passwords \xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\xB2\n");
	printf("\t=======================================================================\n");
	printf("\tURL\t\t\t\t Username\t\t Password\n");
	printf("\t=======================================================================\n");
	char myString[100];
	int pline=0;
	while(fgets(myString, sizeof(myString),myfile) != NULL){
		pline++;
		if(pline == 1){
			myString[strcspn(myString, "\n")] = 0;
			strcpy(new.url,myString);
		}else if(pline == 2){
			myString[strcspn(myString, "\n")] = 0;
			strcpy(new.username,myString);
		}else if(pline == 3){
			myString[strcspn(myString, "\n")] = 0;
			strcpy(new.password,myString);
		}else if(pline == 4)
			{printf("\t%-9s\t\t\t %-5s\t\t\t %-5s\n",new.url,new.username,new.password);
			pline=0;
		}
	}
	//close the filefclose(myfile);
}


int* search(void){
	system("@cls||clear");
	puts("\n\n\t***********************\n\t\tSearch A Password\n\t***********************\n\n");
	
	static int output[2];
	
	printf("\tWhere is the url? ");
	char key[100];
	char input[100];
	scanf("%s",key);
	strcpy(input,key);
	strcat(key, "\n");
	
	FILE *myfile;
	myfile = fopen("repository.txt","r"); 
	if(myfile == NULL){  
	printf("An error is happend!!!");  
	printf("Please reset everything and try again!!!");  
	exit(1);             
	}
	
	
	char myString[100];
	int line=0;
	int find=0;
	int fieldNumber=0;//I s
	while(fgets(myString, sizeof(myString),myfile) != NULL){
		line++; 
		fieldNumber++;
		if(strcmp(myString, key) == 0 && fieldNumber == 1){
			printf("\n\tI found %s at line %d\n", input, line);
			find=1;
			output[0]=find;
			output[1]=line;
			break;
		}
		
		//When we starting reading a new entity
		if(fieldNumber == 4){
			fieldNumber=0;
		}
	}

	fclose(myfile);
	if(find ==0){
		printf("\n\t%s does not exist in your records\n",input);
		//exit(1);
		return output;
		}

	
	myfile = fopen("repository.txt","r"); 
	if(myfile == NULL)
	{  
		printf("An error is happend!!!");  
		printf("Please reset everything and try again!!!");  
		exit(1);             
	}
	
	int pline=0;
	while(fgets(myString, sizeof(myString),myfile) != NULL){
		pline++;
		if(pline == (line+1)){
			printf("\tUsername: %s",myString);
		}else if(pline == (line+2)){
			printf("\tPassword: %s",myString);
			break;
		};
	}
	//close the file
	fclose(myfile);
	return output;
};


void add(void)
	{system("@cls||clear");
	puts("\n\n\t***********************\n\t\tAdd A Password\n\t***********************\n\n");
	
	struct entity{char url[20];
	char username[20];
	char password[20];
	};
	struct entity new; 
	
	printf("\tTo add your desired password please add the following inform\n");
	printf("\turl: ");
	scanf("%s",&new.url);
	printf("\tusername: ");
	scanf("%s",&new.username);
	printf("\tpassword: ");
	scanf("%s",&new.password);
	
	
	FILE *myfile;
	myfile = fopen("repository.txt","a"); 
	if(myfile == NULL)
	{  
	printf("An error is happend!!!");  
	printf("Please reset everything and try again!!!");  
	exit(1);             
	}
	
	fprintf(myfile,"%s\n%s\n%s\n----------\n",&new.url,&new.username,&new.password);
	fclose(myfile);
	
	puts("\tThe request was successful");
	printf("\t Would you like to add another item(y/n): ");
	char quit;
	getchar();
	scanf("%c",&quit);
	if(quit=='y'){add();
	}
}


void edit(void){
	
	int* place=search();
	// return array [find, line]
	//printf("%d, %d",place[0],place[1]);
	int find=place[0];
	int line=place[1];
	if(find == 0){
		printf("\tYour desired URL does not exists!!!");
	}else{
			
			char username[20], password[20];
			printf("\tPlease enter your new Username for this URL: ");
			scanf("%s",&username);
			printf("\tPlease enter your new Password for this URL: ");
			scanf("%s",&password);
			
			FILE *originalfile= fopen("repository.txt","r");
			FILE *tempfile= fopen("temp.txt","w");
			if(originalfile == NULL || tempfile == NULL )
			{
			printf("An error is happend!!!");  
			printf("Please reset everything and try again!!!");  
			exit(1);             
		}
		
		char myString[100];
		int pline=0;
		while(fgets(myString, sizeof(myString),originalfile) != NULL){
			pline++;
			if(pline != (line+1) && pline != (line+2)){//we just want to change username and password
				fprintf(tempfile,"%s",myString);
				//printf("\t%s has been deleted\n",myString);
			}else if(pline == (line+1)){
				fprintf(tempfile,"%s\n",username);
			}else if(pline == (line+2)){
				fprintf(tempfile,"%s\n",password);
			}
		}
		fclose(originalfile);
		fclose(tempfile);
		
		
		remove("repository.txt");
		rename("temp.txt","repository.txt");
		
		
		puts("\tThe request was successful");
		printf("\tWould you like to adjust another item(y/n): ");
		char quit;getchar();
		scanf("%c",&quit);
		if(quit=='y'){
			edit();
		}
	}
};


void delet(void){
	
	int* place=search();
	// return array [find, line]
	//printf("%d, %d",place[0],place[1]);
	int find=place[0];
	int line=place[1];
	if(find == 0){
		printf("\tYour desired URL does not exists!!!");
	}else{
			// open the textfile
			FILE *originalfile= fopen("repository.txt","r");
			FILE *tempfile= fopen("temp.txt","w");
			if(originalfile == NULL || tempfile == NULL )
			{  
				printf("An error is happend!!!");  
				printf("Please reset everything and try again!!!");  
				exit(1);             
			}
			
			// paste all content of the original file to the temporary file except the ones that we want to remove
			char myString[100];
			int pline=0;
			while(fgets(myString, sizeof(myString),originalfile) != NULL){
				pline++;
				if(pline != line && pline != (line+1) && pline != (line+2) && pline != (line+3)){
					fprintf(tempfile,"%s",myString);
					//printf("\t%s has been deleted\n",myString);
				}
			}fclose(originalfile);
			fclose(tempfile);
			
			remove("repository.txt");
			rename("temp.txt","repository.txt");
			
			puts("\tThe request was successful");
			printf("\tWould you like to remove another item(y/n): ");
			char quit;
			getchar();
			scanf("%c",&quit);
			if(quit=='y'){
				delet();
			}
		}
}


void main(void) {
	system("@cls||clear");

	puts("\n\n\t****************************************************\n\t\tWelcome to Your Password Management System\n\t****************************************************\n\n");
	int task;
	task=mainMenu();
	switch (task){
	case 1:
		view();
		break;
	case 2:
		search();
		break;
	case 3:
		add();
		break;
	case 4:
		edit();
		break;
	case 5:
		delet();
		break;
	case 6:
		exit(1);
	}
	
	
	printf("\n\tWould you like to do another action?(y/n) ");
	char quit;
	getchar();
	scanf("%c",&quit);
	if(quit=='y'){
		main();
	}else if (quit=='n'){
		exit(1);
	}
}
